name: Build & Release

on:
  workflow_call:
    inputs:
      working-directory:
        description: "The working directory to run the command in"
        required: false
        default: "."
        type: string
    secrets:
      EXPO_TOKEN:
        required: true
      EXPO_APPLE_APP_SPECIFIC_PASSWORD:
        required: true

jobs:
  build:
    name: Build & Versioning App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Enable Corepack
        run: corepack enable


      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: yarn
      
      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }} 

      - name: Install dependencies
        run: yarn install

      - name: Build on EAS
        run: npx eas-cli build --platform all --non-interactive
        if: ${{ !contains(github.event.head_commit.message, '[skip build]') || !contains(github.event.head_commit.message, '[OTA]') }}

      - name: Commit and push version changes
        run: |
          if [[ "$(git status --porcelain)" != "" ]]; then
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add .
            git commit -m "Update app version [skip ci]"
            git push
          fi

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install

      - name: Submit to Testflight
        run: EXPO_APPLE_APP_SPECIFIC_PASSWORD=${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }} npx eas-cli submit -p ios --latest --non-interactive\

      - name: Submit to Play Store
        run: npx eas-cli submit -p android --latest --non-interactive
